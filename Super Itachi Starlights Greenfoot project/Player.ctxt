#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ The\ character\ that\ the\ user\ plays\ as.\r\n\ Player\ can\ run,\ jump,\ collect\ items\ and\ throw\ shurikens.\r\n\ \r\n
comment1.params=
comment1.target=Player()
comment10.params=
comment10.target=void\ checkForLanding()
comment10.text=\r\n\ Method\ checkForLanding\r\n\ Continue/stop\ applying\ gravity\ as\ necessary\ to\ make\ the\ Player\ land\ on\r\n\ Blocks\ or\ the\ Ground.\r\n
comment11.params=
comment11.target=boolean\ onSurface()
comment11.text=\r\n\ Method\ onSurface\r\n\ Returns\ true\ if\ the\ Player\ is\ in\ contact\ with\ a\ Block\ or\ the\ Ground;\r\n\ false\ otherwise.\r\n
comment12.params=
comment12.target=void\ beStanding()
comment12.text=\r\n\ Method\ beStanding\r\n\ Set\ the\ Player's\ image\ to\ standing,\ facing\ in\ the\ current\ most\ logical\r\n\ direction.\r\n
comment13.params=
comment13.target=void\ setPreciseLocation()
comment13.text=\r\n\ Method\ setPreciseLocation\r\n\ Set\ the\ y-location\ of\ the\ Player\ just\ right\ (when\ running\ and\ standing,\r\n\ on\ Blocks\ and\ the\ Ground).\r\n
comment14.params=
comment14.target=void\ checkForEnemy()
comment14.text=\r\n\ Method\ checkForEnemy\r\n\ If\ the\ Player\ has\ contacted\ an\ Enemy,\ adjust\ the\ HealthBar\ accordingly\r\n\ and\ start\ the\ modulating-transparency\ "effect".\r\n
comment15.params=
comment15.target=void\ modulateTransparency()
comment15.text=\r\n\ Method\ modulateTransparency\r\n\ Called\ if\ the\ Player\ is\ contacted\ by\ an\ Enemy\ and\ is\ losing\ health;\r\n\ purely\ visual.\r\n
comment16.params=
comment16.target=void\ resetImageTransparencies()
comment16.text=\r\n\ Method\ resetImageTransparencies\r\n\ The\ Player's\ animation\ array\ images\ need\ to\ be\ reset\ to\ opaque\r\n\ once\ the\ transparency\ "effect"\ is\ over.\r\n
comment17.params=
comment17.target=void\ checkForReload()
comment17.text=\r\n\ Method\ checkForReload\r\n\ Add\ 10\ shurikens\ to\ the\ Player\ if\ they\ touch\ a\ Reload\ object\ (a\ croissant).\r\n\ Remove\ the\ Reload\ and\ play\ a\ sound.\r\n
comment18.params=
comment18.target=void\ checkForGem()
comment18.text=\r\n\ Method\ checkForGem\r\n\ If\ the\ Player\ is\ touching\ a\ Gem,\ check\ which\ type\ of\ Gem\ it\ was\ and\ add\ to\ the\r\n\ Player's\ corresponding\ Gem\ count\ (variable).\r\n\ Remove\ the\ Gem\ and\ play\ a\ sound.\r\n
comment19.params=
comment19.target=void\ checkForBill()
comment19.text=\r\n\ Method\ checkForBill\r\n\ If\ the\ Player\ is\ touching\ a\ Bill,\ add\ to\ their\ affluence\ a\ random\ value\r\n\ between\ 1\ and\ 10.\r\n\ Remove\ the\ Bill\ and\ play\ a\ sound.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ Player\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment20.params=
comment20.target=void\ throwShuriken()
comment20.text=\r\n\ Method\ throwShuriken\r\n\ If\ the\ user\ presses\ the\ spacebar,\ add\ a\ Shuriken\ to\ the\ Player's\ current\r\n\ location\ and\ have\ it\ travel\ in\ the\ direction\ the\ Player\ is\ facing.\r\n
comment21.params=
comment21.target=void\ displayStats()
comment21.text=\r\n\ Method\ displayStats\r\n\ Display\ the\ Player's\ enemiesLeaked,\ affluence,\ gems\ collected,\ and\ shurikens\r\n\ stats.\r\n\ (This\ method\ looks\ overly\ complicated\ b/c\ I\ tried\ to\ keep\ the\ left\ "margin"\ of\r\n\ the\ screen\ consistent,\ while\ the\ lines\ of\ text\ are\ *centered*\ to\ the\r\n\ assigned\ locations.)\r\n
comment22.params=
comment22.target=void\ stopGameAtNegativeAffluence()
comment22.text=\r\n\ Method\ stopGameAtNegativeAffluence\r\n\ If\ affluence\ goes\ below\ zero,\ end\ the\ game\ and\ play\ a\ trombone\ sound.\r\n
comment23.params=
comment23.target=void\ enemyLeaked()
comment23.text=\r\n\ Mutator\ enemyLeaked\r\n\ When\ an\ Enemy\ makes\ it\ across\ the\ screen,\ add\ to\ the\ Player's\ count\ of\r\n\ enemiesLeaked,\ minus\ 5\ from\ the\ Player's\ affluence,\ and\ play\ a\ sound.\r\n\ (Called\ in\ the\ Enemy\ class.)\r\n
comment24.params=
comment24.target=boolean\ isAtCenter()
comment24.text=\r\n\ Accessor\ isAtCenter\r\n\ Returns\ true\ if\ the\ Player\ is\ at\ the\ center\ of\ the\ world\ (x-coord\ \=\ 450).\r\n\ Used\ in\ other\ classes\ wherever\ the\ objects\ need\ to\ know\ whether\ it's\r\n\ time\ to\ simulate\ rightward\ running.\r\n
comment3.params=
comment3.target=void\ checkMovementKeys()
comment3.text=\r\n\ Method\ checkMovementKeys\r\n\ Check\ what\ keys\ are\ down\ and\ move/animate\ Player\ accordingly.\r\n
comment4.params=
comment4.target=void\ runRight()
comment4.text=\r\n\ Method\ runRight\r\n\ Animate\ the\ Player\ running\ right.\r\n
comment5.params=
comment5.target=void\ moveToCenter()
comment5.text=\r\n\ Method\ moveToCenter\r\n\ Move\ the\ Player\ rightward,\ when\ jumping\ or\ running,\ but\ only\ while\r\n\ it's\ left\ of\ center.\r\n\ (If\ the\ user\ has\ the\ Player\ run\ rightward\ when\ it's\ at\ the\ center,\r\n\ other\ objects\ instead\ move\ *left*.)\r\n
comment6.params=
comment6.target=void\ runLeft()
comment6.text=\r\n\ Method\ runLeft\r\n\ Animate\ the\ Player\ running\ left.\r\n
comment7.params=
comment7.target=void\ jump()
comment7.text=\r\n\ Method\ jump\r\n\ Move\ the\ Player\ in\ the\ world\ in\ such\ a\ way\ that\ makes\ it\ look\ like\r\n\ they're\ jumping.\r\n
comment8.params=
comment8.target=void\ applyGravity()
comment8.text=\r\n\ Method\ applyGravity\r\n\ Modulate\ the\ "vertical\ velocity"\ of\ the\ Player\ every\ iteration\ to\r\n\ simulate\ gravity\ (when\ the\ Player\ is\ jumping/falling).\r\n
comment9.params=
comment9.target=void\ checkForFall()
comment9.text=\r\n\ Method\ checkForFall\r\n\ Have\ the\ player\ start\ to\ "fall"\ according\ to\ gravity\ if\ they\ run\ off\r\n\ a\ group\ of\ Blocks.\r\n
numComments=25
